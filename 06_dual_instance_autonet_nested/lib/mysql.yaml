heat_template_version: 2013-05-23
 
description: Template that installs a MySQL server with a database.
 
parameters:
  image:
    type: string
    description: >
      Name or ID of the image to use for the instance.
    constraints:
      - custom_constraint: glance.image
        description: Must identify an image known to Glance
  flavor:
    type: string
    description: Flavor for the instance to be created
    default: m1.small
    constraints:
      - custom_constraint: nova.flavor
        description: Must be a flavor known to Nova
  key_name:
    type: string
    description: Name of an existing key pair to use for the instance
    constraints:
      - custom_constraint: nova.keypair
        description: Must name a public key (pair) known to Nova
  private_network:
    type: string
    label: Private network name or ID
    description: Network to attach server to.
    default: private
  DBRootPassword:
    description: Root password for MySQL
    type: string
    default: admin
    hidden: true
    constraints:
      - length: { min: 5, max: 41 }
        description: password must be between 5 and 41 characters
      - allowed_pattern: '[a-zA-Z0-9]*'
        description: must contain only alphanumeric characters.
  DBName:
    description: The WordPress database name
    type: string
    default: wordpress
  DBUsername:
    description: The WordPress database username
    type: string
    default: admin
  DBPassword:
    type: string
    default: admin
    hidden: true
    constraints:
      - length: { min: 5, max: 41 }
        description: password must be between 5 and 41 characters
      - allowed_pattern: '[a-zA-Z0-9]*'
        description: must contain only alphanumeric characters.
 
resources:
  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: wait_handle }
      count: 1
      timeout: 600
 
  wait_handle:
    type: OS::Heat::WaitConditionHandle
 
  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: db_server_security_group
      rules:
        - protocol: tcp
          port_range_min: 3306
          port_range_max: 3306
 
  port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: private_network }
      security_groups:
        - { get_resource: security_group }
      
  mysql_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: port }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            $db_rootpassword: { get_param: DBRootPassword }
            $db_name: { get_param: DBName }
            $db_username: { get_param: DBUsername }
            $db_userpass: { get_param: DBPassword }
            wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }
          template: |
            #!/bin/bash -ex
            yum install -y mariadb-server
            systemctl start mariadb
            systemctl enable mariadb
            mysqladmin -u root password $db_rootpassword
            mysql -u root --password=$db_rootpassword  -e "CREATE DATABASE $db_name;"
            mysql -u root --password=$db_rootpassword  -e "GRANT ALL PRIVILEGES ON $db_name.* TO $db_username@'%' IDENTIFIED BY '$db_userpass';"
            mysql -u root --password=$db_rootpassword  -e "FLUSH PRIVILEGES;"
 
            # notify heat that we are done here
            wc_notify --data-binary '{"status": "SUCCESS"}'

outputs:
  name:
    description: Name of the MySQL instance.
    value: { get_attr: [mysql_instance, name] }
  ip:
    description: The IP address of the MySQL instance.
    value: { get_attr: [mysql_instance, first_address] }
  port:
    description: The network port of the MySQL instance.
    value: { get_resource: port }
